<%# For /app/views/utility_readings/index.html.erb %>
<div class="page-header">
  <h1 class="header-title"><%= t('utility_readings.title', default: 'Chỉ số tiện ích') %></h1>
  <div class="header-actions">
    <%= link_to t('utility_readings.new', default: 'Thêm chỉ số tiện ích mới'), new_utility_reading_path, class: "btn btn-primary" %>
  </div>
</div>

<div class="card mb-4">
  <div class="card-body">
    <%= form_with url: utility_readings_path, method: :get, class: "search-form", id: "readings-filter-form" do |form| %>
      <div class="filter-container">
        <!-- Building filter -->
        <div class="filter-select-container">
          <%= form.select :building_id, 
                        options_for_select(Building.all.map { |b| [b.name, b.id] }, params[:building_id]), 
                        { prompt: t('utility_readings.filter_by_building', default: 'Tòa nhà') },
                        class: "form-select filter-select", 
                        id: "building-filter",
                        onchange: "filterRooms()" %>
        </div>
        
        <!-- Room filter -->
        <div class="filter-select-container">
          <%= form.select :room_id, 
                        options_for_select(Room.all.map { |r| 
                          ["#{r.number}", r.id, { 'data-building-id': r.building_id }]  
                        }, params[:room_id]), 
                        { prompt: t('utility_readings.filter_by_room', default: 'Phòng') },
                        class: "form-select filter-select",
                        id: "room-filter" %>
        </div>
        
        <!-- Date range filters with label above -->
        <div class="reading-period-container">
          <label class="form-label"><%= t('utility_readings.reading_period', default: 'Kỳ đọc số') %></label>
          <div class="date-inputs">
            <%= form.date_field :start_date, value: params[:start_date], class: "form-control date-input", placeholder: "mm/dd/yyyy" %>
            <%= form.date_field :end_date, value: params[:end_date], class: "form-control date-input", placeholder: "mm/dd/yyyy" %>
          </div>
        </div>
        
        <!-- Search button -->
        <div class="search-button-container">
          <button type="submit" class="btn btn-primary search-btn">
            <i class="fas fa-search me-1"></i> <%= t('common.search', default: 'Tìm kiếm') %>
          </button>
        </div>
      </div>
    <% end %>
  </div>
</div>

<div class="card">
  <div class="card-body">
    <% if @utility_readings.any? %>
      <% if params[:room_id].present? || params[:building_id].present? || params[:start_date].present? || params[:end_date].present? %>
        <div class="search-results-info mb-3">
          <%= t('utility_readings.filter_results', count: @utility_readings.count, default: "Found #{@utility_readings.count} readings") %>
          <% if params[:room_id].present? %>
            <span class="filter-tag">
              <%= Room.find(params[:room_id]).number %>
            </span>
          <% end %>
          <% if params[:building_id].present? && !params[:room_id].present? %>
            <span class="filter-tag">
              <%= Building.find(params[:building_id]).name %>
            </span>
          <% end %>
          <% if params[:start_date].present? && params[:end_date].present? %>
            <span class="filter-tag">
              <%= l Date.parse(params[:start_date]), format: :short %> - <%= l Date.parse(params[:end_date]), format: :short %>
            </span>
          <% elsif params[:start_date].present? %>
            <span class="filter-tag">
              <%= t('common.from', default: 'From') %> <%= l Date.parse(params[:start_date]), format: :short %>
            </span>
          <% elsif params[:end_date].present? %>
            <span class="filter-tag">
              <%= t('common.until', default: 'Until') %> <%= l Date.parse(params[:end_date]), format: :short %>
            </span>
          <% end %>
        </div>
      <% end %>
      <div class="table-responsive">
        <table class="data-table">
          <thead>
            <tr>
              <th><%= t('utility_readings.room') %></th>
              <th><%= t('utility_readings.reading_date') %></th>
              <th><%= t('utility_readings.electricity') %></th>
              <th><%= t('utility_readings.water') %></th>
              <th><%= t('utility_readings.electricity_cost') %></th>
              <th><%= t('utility_readings.water_cost') %></th>
              <th><%= t('common.actions') %></th>
            </tr>
          </thead>
          <tbody>
            <% @utility_readings.each do |reading| %>
              <tr>
                <td><%= link_to reading.room.number, room_path(reading.room) %></td>
                <td><%= l reading.reading_date, format: :short %></td>
                <td><%= reading.electricity_reading %></td>
                <td><%= reading.water_reading %></td>
                <td><%= number_to_currency(reading.electricity_reading * reading.electricity_unit_price, precision: 0, delimiter: ',', unit: 'VND ') %></td>
                <td><%= number_to_currency(reading.water_reading * reading.water_unit_price, precision: 0, delimiter: ',', unit: 'VND ') %></td>
                <td>
                  <div class="action-links">
                    <%= link_to t('common.view'), utility_reading_path(reading), class: "btn btn-sm btn-outline" %>
                    <%= link_to t('common.edit'), edit_utility_reading_path(reading), class: "btn btn-sm btn-outline" %>
                  </div>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    <% else %>
      <div class="empty-state">
        <% if params[:room_id].present? || params[:building_id].present? || params[:start_date].present? || params[:end_date].present? %>
          <p><%= t('utility_readings.no_readings_with_filter', default: 'No utility readings match your filter criteria.') %></p>
          <%= link_to t('common.clear_filters', default: 'Clear all filters'), utility_readings_path, class: "btn btn-primary" %>
        <% else %>
          <p><%= t('utility_readings.no_readings', default: 'No utility readings found.') %></p>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<style>
  .filter-container {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
    gap: 15px;
  }

  .filter-select-container {
    flex: 1;
    min-width: 200px;
  }
  
  .reading-period-container {
    flex: 2;
    min-width: 300px;
  }
  
  .reading-period-container .form-label {
    display: block;
    margin-bottom: 5px;
    font-size: 14px;
    color: #495057;
  }
  
  .date-inputs {
    display: flex;
    gap: 10px;
  }

  .date-input {
    width: 50%;
  }

  .search-button-container {
    flex: 0 0 auto;
    display: flex;
    align-items: flex-end;
  }

  .search-btn {
    height: 38px;
    padding-left: 20px;
    padding-right: 20px;
  }
  
  .form-select, .form-control {
    height: 38px;
    border-radius: 4px;
    border: 1px solid #ced4da;
  }

  @media (max-width: 768px) {
    .filter-select-container,
    .reading-period-container,
    .search-button-container {
      flex: 0 0 100%;
    }
  }

  .date-range-label {
    font-size: 0.85rem;
    margin-bottom: 4px;
    color: #6c757d;
  }

  .filter-actions {
    display: flex;
    align-items: flex-end;
    gap: 10px;
  }

  .filter-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border-radius: 4px;
    height: 40px;
    min-width: 110px;
    justify-content: center;
  }

  .filter-clear-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border-radius: 4px;
    height: 40px;
    min-width: 100px;
    justify-content: center;
  }

  .search-results-info {
    color: #6c757d;
    font-size: 0.9rem;
    margin-bottom: 15px;
  }
  
  .filter-tag {
    display: inline-block;
    background-color: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 20px;
    padding: 3px 10px;
    font-size: 0.85rem;
    margin-right: 5px;
    margin-top: 5px;
  }
</style>

<script>
  // Function to filter room options based on the selected building
  function filterRooms() {
    const buildingFilter = document.getElementById('building-filter');
    const roomFilter = document.getElementById('room-filter');
    const selectedBuildingId = buildingFilter.value;
    
    // Save current room selection
    const currentRoomId = roomFilter.value;
    
    // Get all options except the first one (prompt)
    const options = Array.from(roomFilter.options).slice(1);
    
    // Hide/show options based on selected building
    options.forEach(option => {
      const buildingId = option.getAttribute('data-building-id');
      
      if (!selectedBuildingId || buildingId === selectedBuildingId) {
        // Show the option if no building selected or it matches the selected building
        option.style.display = '';
      } else {
        // Hide options from other buildings
        option.style.display = 'none';
      }
    });
    
    // If the currently selected room is from a different building, reset the selection
    if (currentRoomId) {
      const selectedOption = roomFilter.querySelector(`option[value="${currentRoomId}"]`);
      if (selectedOption) {
        const optionBuildingId = selectedOption.getAttribute('data-building-id');
        if (selectedBuildingId && optionBuildingId !== selectedBuildingId) {
          roomFilter.selectedIndex = 0;
        }
      }
    }
  }

  // Run on page load to handle initial state
  document.addEventListener('DOMContentLoaded', function() {
    // Set up initial filter if building is already selected
    const buildingFilter = document.getElementById('building-filter');
    if (buildingFilter && buildingFilter.value) {
      filterRooms();
    }
    
    // Make sure selected room is visible 
    const roomFilter = document.getElementById('room-filter');
    const selectedRoomId = roomFilter.value;
    
    if (selectedRoomId) {
      const selectedOption = roomFilter.querySelector(`option[value="${selectedRoomId}"]`);
      if (selectedOption) {
        selectedOption.style.display = '';
      }
    }
  });
</script>
