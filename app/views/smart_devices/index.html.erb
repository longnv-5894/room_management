<% content_for :title, @building.present? ? "#{t('smart_devices.title')} - #{@building.name}" : t('smart_devices.list') %>

<div class="container-fluid px-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mt-4">
      <i class="fas fa-fingerprint"></i>
      <% if @building.present? %>
        <%= t('smart_devices.title') %> - <%= @building.name %>
      <% else %>
        <%= t('smart_devices.list') %>
      <% end %>
    </h1>
    <div>
      <% if @building.present? %>
        <%= link_to building_path(@building), class: 'btn btn-outline-secondary me-2' do %>
          <i class="fas fa-chevron-left me-1"></i> <%= t('common.back') %>
        <% end %>
        
        <%= link_to new_building_smart_device_path(@building), class: 'btn btn-primary' do %>
          <i class="fas fa-plus-circle me-1"></i> <%= t('smart_devices.new') %>
        <% end %>
      <% else %>
        <%= link_to new_smart_device_path, class: 'btn btn-primary' do %>
          <i class="fas fa-plus-circle me-1"></i> <%= t('smart_devices.new') %>
        <% end %>
      <% end %>
      
      <%= link_to sync_devices_smart_devices_path, method: :post, class: 'btn btn-info ms-2', data: { turbo_method: :post, turbo_confirm: t('smart_devices.confirm_sync') } do %>
        <i class="fas fa-sync me-1"></i> <%= t('smart_devices.sync_with_cloud') %>
      <% end %>
    </div>
  </div>

  <div class="card border-0 shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center bg-white">
      <h6 class="m-0 font-weight-bold text-primary"><%= t('smart_devices.list') %></h6>
      
      <div>
        <%= form_with url: @building.present? ? building_smart_devices_path(@building) : smart_devices_path, method: :get, class: 'd-flex' do |f| %>
          <%= f.select :device_type, 
            [
              [t('common.all_items', items: t('smart_devices.common.device_type')), ''], 
              [t('smart_devices.types.smart_lock'), 'smart_lock'], 
              [t('smart_devices.types.smart_switch'), 'smart_switch'], 
              [t('smart_devices.types.temperature_sensor'), 'temperature_sensor']
            ], 
            { selected: params[:device_type] }, 
            { class: 'form-select me-2', style: 'width: auto;' } 
          %>
          
          <%= f.text_field :search, value: params[:search], class: 'form-control me-2', placeholder: t('common.search_by_name'), style: 'width: auto;' %>
          
          <button type="submit" class="btn btn-sm btn-primary me-2">
            <i class="fas fa-search me-1"></i><%= t('common.search') %>
          </button>
          
          <% if params[:search].present? || params[:device_type].present? %>
            <%= link_to @building.present? ? building_smart_devices_path(@building) : smart_devices_path, class: 'btn btn-sm btn-outline-secondary' do %>
              <i class="fas fa-times me-1"></i><%= t('common.clear') %>
            <% end %>
          <% end %>
        <% end %>
      </div>
    </div>
    
    <div class="card-body">
      <% if @smart_devices.any? %>
        <div class="table-responsive">
          <table class="table table-hover align-middle mb-0">
            <thead class="table-light">
              <tr>
                <th class="border-0"><%= t('smart_devices.common.name') %></th>
                <th class="border-0"><%= t('smart_devices.common.device_type') %></th>
                <th class="border-0"><%= t('smart_devices.common.room') %></th>
                <th class="border-0"><%= t('smart_devices.common.status') %></th>
                <th class="border-0"><%= t('common.actions') %></th>
              </tr>
            </thead>
            <tbody>
              <% @smart_devices.each do |device| %>
                <% 
                  device_icon = case device.device_type
                              when 'smart_lock'
                                'fa-lock'
                              when 'smart_switch'
                                'fa-toggle-on'
                              when 'temperature_sensor'
                                'fa-thermometer-half'
                              else
                                'fa-microchip'
                              end
                  
                  # Check if device is active (for demonstration - adapt to your actual logic)
                  is_active = device.try(:device_users).try(:where, 'last_active_at > ?', 12.hours.ago).try(:exists?) || false
                %>
                <tr>
                  <td>
                    <div class="d-flex align-items-center">
                      <div class="rounded-circle bg-light text-primary d-flex align-items-center justify-content-center me-2" style="width: 40px; height: 40px;">
                        <i class="fas <%= device_icon %>"></i>
                      </div>
                      <div>
                        <div class="fw-medium"><%= device.name %></div>
                        <small class="text-muted"><code><%= device.device_id %></code></small>
                      </div>
                    </div>
                  </td>
                  <td>
                    <% case device.device_type %>
                    <% when 'smart_lock' %>
                      <span class="badge bg-primary bg-opacity-10 text-primary border border-primary border-opacity-25 px-2 py-1">
                        <i class="fas fa-lock me-1"></i> <%= t('smart_devices.types.smart_lock') %>
                      </span>
                    <% when 'smart_switch' %>
                      <span class="badge bg-success bg-opacity-10 text-success border border-success border-opacity-25 px-2 py-1">
                        <i class="fas fa-toggle-on me-1"></i> <%= t('smart_devices.types.smart_switch') %>
                      </span>
                    <% when 'temperature_sensor' %>
                      <span class="badge bg-info bg-opacity-10 text-info border border-info border-opacity-25 px-2 py-1">
                        <i class="fas fa-thermometer-half me-1"></i> <%= t('smart_devices.types.temperature_sensor') %>
                      </span>
                    <% else %>
                      <span class="badge bg-secondary bg-opacity-10 text-secondary border border-secondary border-opacity-25 px-2 py-1">
                        <i class="fas fa-microchip me-1"></i> <%= t('smart_devices.types.smart_device', default: device.device_type.humanize) %>
                      </span>
                    <% end %>
                  </td>
                  <td>
                    <% if device.room.present? %>
                      <%= link_to device.room.number, room_path(device.room), class: 'text-decoration-none' %>
                    <% else %>
                      <span class="text-muted"><%= t('smart_devices.common.not_assigned') %></span>
                    <% end %>
                  </td>
                  <td>
                    <% if is_active %>
                      <span class="badge bg-success">Online</span>
                    <% else %>
                      <span class="badge bg-danger">Offline</span>
                    <% end %>
                  </td>
                  <td>
                    <div class="btn-group">
                      <%= link_to smart_device_path(device), class: 'btn btn-sm btn-outline-primary' do %>
                        <i class="fas fa-eye me-1"></i> <%= t('common.view') %>
                      <% end %>
                      
                      <%= link_to edit_smart_device_path(device), class: 'btn btn-sm btn-outline-secondary' do %>
                        <i class="fas fa-edit me-1"></i> <%= t('common.edit') %>
                      <% end %>
                    </div>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
          <%= paginate @smart_devices if @smart_devices.respond_to?(:total_pages) %>
        </div>
      <% else %>
        <div class="alert alert-info">
          <i class="fas fa-info-circle me-2"></i> 
          <%= t('smart_devices.no_devices') %>
          <% if @building.present? %>
            <%= link_to t('smart_devices.add'), new_building_smart_device_path(@building), class: "alert-link" %>
          <% else %>
            <%= link_to t('smart_devices.add'), new_smart_device_path, class: "alert-link" %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<style>
  .device-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 4px;
    background-color: #f8f9fa;
  }
  
  .filter-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    align-items: center;
  }

  .search-input-container {
    flex: 3;
  }

  .filter-select-container {
    flex: 1;
    min-width: 200px;
  }

  .filter-actions {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .status-badge {
    display: inline-flex;
    align-items: center;
    font-size: 0.8rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
  }
  
  .status-active {
    background-color: #d4edda;
    color: #155724;
  }
  
  .status-inactive {
    background-color: #f8d7da;
    color: #721c24;
  }
  
  .status-icon {
    font-size: 8px;
    margin-right: 5px;
  }
  
  .empty-state {
    text-align: center;
    padding: 40px 0;
  }
  
  .empty-state-icon {
    font-size: 2.5rem;
    color: #adb5bd;
    margin-bottom: 1rem;
  }
  
  .empty-state h3 {
    margin-bottom: 0.5rem;
  }
  
  .empty-state p {
    color: #6c757d;
    margin-bottom: 1.5rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Device switch toggle functionality for smart switches
    const deviceSwitches = document.querySelectorAll('.device-switch');
    
    deviceSwitches.forEach(function(switchEl) {
      switchEl.addEventListener('change', function() {
        const deviceId = this.dataset.deviceId;
        const isOn = this.checked;
        const label = this.nextElementSibling;
        
        label.textContent = '<%= t("smart_devices.common.loading") %>';
        
        fetch(`/smart_devices/${deviceId}/${isOn ? 'turn_on' : 'turn_off'}`, {
          method: 'POST',
          headers: {
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
            'Accept': 'application/json',
          },
          credentials: 'same-origin'
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            label.textContent = isOn ? '<%= t("smart_devices.switch.on") %>' : '<%= t("smart_devices.switch.off") %>';
          } else {
            this.checked = !isOn;
            label.textContent = !isOn ? '<%= t("smart_devices.switch.on") %>' : '<%= t("smart_devices.switch.off") %>';
            alert('<%= t("smart_devices.switch.control_error") %>');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          this.checked = !isOn;
          label.textContent = !isOn ? '<%= t("smart_devices.switch.on") %>' : '<%= t("smart_devices.switch.off") %>';
          alert('<%= t("smart_devices.common.network_error") %>');
        });
      });
    });
  });
</script>
