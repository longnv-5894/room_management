<% content_for :title, t('smart_devices.lock_users.title', name: @smart_device.name) %>

<% content_for :styles do %>
<style>
  /* Progress bar styles */
  #sync_progress_container {
    margin-bottom: 1rem;
  }
  
  .sync-progress {
    background: #f8f9fa;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  }
  
  .sync-progress .progress {
    height: 20px;
    margin-bottom: 10px;
  }
  
  .sync-progress.completed {
    background-color: #d1e7dd;
  }
  
  .sync-progress.error {
    background-color: #f8d7da;
  }
  
  .progress-message {
    font-size: 14px;
    font-weight: 500;
  }
</style>
<% end %>

<div class="container-fluid px-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h5 mt-3 mb-2">
      <i class="fas fa-users"></i>
      <%= t('smart_devices.lock_users.title', name: @smart_device.name) %>
    </h1>
    <div>
      <%= link_to smart_device_path(@smart_device), class: 'btn btn-outline-secondary me-2' do %>
        <i class="fas fa-chevron-left me-1"></i> <%= t('smart_devices.common.back_to_device') %>
      <% end %>
      
      <%= link_to sync_device_users_smart_device_path(@smart_device), method: :post, class: 'btn btn-info', data: { turbo_method: :post } do %>
        <i class="fas fa-sync me-1"></i> <%= t('smart_devices.sync_users_with_cloud') %>
      <% end %>
    </div>
  </div>

  <!-- Using global floating progress bar instead of local progress container -->

  <div class="row">
    <div class="col-xl-3 col-md-6 mb-4">
      <div class="card border-0 shadow h-100 py-2">
        <div class="card-body">
          <div class="row no-gutters align-items-center">
            <div class="col mr-2">
              <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                <%= t('smart_devices.lock_users.total_users') %></div>
              <div class="h5 mb-0 font-weight-bold text-gray-800">
                <%= @device_users.count %> <%= t('smart_devices.lock_users.users') %>
              </div>
            </div>
            <div class="col-auto">
              <i class="fas fa-users fa-2x text-gray-300"></i>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-xl-3 col-md-6 mb-4">
      <div class="card border-0 shadow h-100 py-2">
        <div class="card-body">
          <div class="row no-gutters align-items-center">
            <div class="col mr-2">
              <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                <%= t('smart_devices.lock_users.active_users') %></div>
              <div class="h5 mb-0 font-weight-bold text-gray-800">
                <%= @device_users.where('last_active_at > ?', 30.days.ago).count %> <%= t('smart_devices.lock_users.users') %>
              </div>
            </div>
            <div class="col-auto">
              <i class="fas fa-user-check fa-2x text-gray-300"></i>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="card border-0 shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center bg-white">
      <h6 class="m-0 font-weight-bold text-primary"><%= t('smart_devices.lock_users.authorized_users') %></h6>
    </div>
    
    <div class="card-body">
      <% if @device_users.any? %>
        <div class="table-responsive">
          <table class="table table-hover align-middle mb-0">
            <thead class="table-light">
              <tr>
                <th class="border-0"><%= t('smart_devices.common.name') %></th>
                <th class="border-0"><%= t('smart_devices.lock.unlock_methods.method') %></th>
                <th class="border-0"><%= t('smart_devices.lock.user') %></th>
                <th class="border-0"><%= t('smart_devices.lock_users.role') %></th>
                <th class="border-0"><%= t('tenants.title') %></th>
                <th class="border-0"><%= t('common.actions') %></th>
              </tr>
            </thead>
            <tbody>
              <% @device_users.each do |user| %>
                <tr>
                  <td><%= user.name || t('smart_devices.history.unknown_user') %></td>
                  <td>
                    <% if user.unlock_name.present? %>
                      <span class="badge bg-info bg-opacity-10 text-info border border-info border-opacity-25 px-2 py-1">
                        <%= user.unlock_name %>
                      </span>
                    <% else %>
                      <span class="text-muted"><%= t('common.none') %></span>
                    <% end %>
                  </td>
                  <td>
                    <% if user.unlock_sn.present? %>
                      <div class="d-flex align-items-center">
                        <span class="badge bg-secondary me-2">#<%= user.unlock_sn %></span>
                        <small class="text-muted"><%= user.dp_code %></small>
                      </div>
                    <% else %>
                      <span class="text-muted">-</span>
                    <% end %>
                  </td>
                  <td>
                    <% if user.user_type.present? %>
                      <span class="badge bg-primary">
                        <% if user.user_type.is_a?(String) %>
                          <%= t("smart_devices.lock_users.#{user.user_type.downcase}", default: "#{t('smart_devices.lock_users.role')} #{user.user_type}") %>
                        <% else %>
                          <%= t("smart_devices.lock_users.role_number", default: "#{t('smart_devices.lock_users.role')} #{user.user_type}") %>
                        <% end %>
                      </span>
                    <% else %>
                      <span class="text-muted">-</span>
                    <% end %>
                  </td>
                  <td>
                    <% if user.tenant %>
                      <%= link_to user.tenant.name, tenant_path(user.tenant), class: "text-decoration-none" %>
                    <% else %>
                      <span class="text-muted"><%= t('smart_devices.lock_users.not_linked', default: 'Not linked') %></span>
                    <% end %>
                  </td>
                  <td>
                    <% if user.tenant.nil? %>
                      <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#linkModal<%= user.id %>">
                        <i class="fas fa-link me-1"></i> <%= t('smart_devices.lock_users.link') %>
                      </button>
                    <% else %>
                      <%= button_to unlink_user_from_tenant_smart_device_path(@smart_device),
                          method: :post,
                          params: { device_user_id: user.id },
                          form: { data: { turbo_confirm: t('smart_devices.lock_users.confirm_unlink') }, class: "d-inline" },
                          class: "btn btn-sm btn-outline-danger" do %>
                        <i class="fas fa-unlink me-1"></i> <%= t('smart_devices.lock_users.unlink') %>
                      <% end %>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% else %>
        <div class="alert alert-info">
          <i class="fas fa-info-circle me-2"></i> 
          <%= t('smart_devices.lock_users.no_users_message') %>
          <%= link_to t('smart_devices.sync_with_cloud'), sync_device_users_smart_device_path(@smart_device), method: :post, class: "alert-link", data: { turbo_method: :post } %>
        </div>
      <% end %>
    </div>
  </div>
  
  <div class="card border-0 shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center bg-white">
      <h6 class="m-0 font-weight-bold text-primary"><%= t('smart_devices.lock_users.info_title') %></h6>
    </div>
    <div class="card-body">
      <p><%= t('smart_devices.lock_users.info_message_1') %></p>
      <p><%= t('smart_devices.lock_users.info_message_2') %></p>
    </div>
  </div>
</div>

<!-- Link modals -->
<% @device_users.each do |user| %>
  <% if user.tenant.nil? %>
    <div class="modal fade" id="linkModal<%= user.id %>" tabindex="-1" aria-labelledby="linkModalLabel<%= user.id %>" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="linkModalLabel<%= user.id %>"><%= t('smart_devices.lock_users.link_modal_title') %></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <%= form_with url: link_user_to_tenant_smart_device_path(@smart_device), method: :post, local: true do |f| %>
            <div class="modal-body">
              <%= f.hidden_field :device_user_id, value: user.id %>
              <div class="mb-3">
                <%= f.label :tenant_id, t('smart_devices.lock_users.select_tenant'), class: "form-label" %>
                <%= f.select :tenant_id, 
                      Tenant.order(:name).map { |t| [t.name, t.id] }, 
                      { prompt: "-- #{t('smart_devices.lock_users.select_tenant_prompt')} --" }, 
                      { class: "form-select select2", required: true } %>
              </div>
              <div class="small text-muted">
                <%= t('smart_devices.lock_users.total_tenants', count: Tenant.count) %>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><%= t('common.cancel') %></button>
              <%= f.submit t('smart_devices.lock_users.link'), class: "btn btn-primary" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
<% end %>

<% content_for :scripts do %>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize Select2 if available
    if (typeof jQuery !== 'undefined' && typeof jQuery.fn.select2 !== 'undefined') {
      $('.select2').select2({
        theme: 'bootstrap4'
      });
    }
    
    // Poll interval in milliseconds
    const POLL_INTERVAL = 1000; // 1 second
    let pollingTimer = null;
    
    // Attach event handler to sync button
    const syncButton = document.querySelector('a[href*="sync_device_users"]');
    if (syncButton) {
      syncButton.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Disable the button to prevent multiple clicks
        syncButton.classList.add('disabled');
        syncButton.setAttribute('disabled', 'disabled');
        
        // Start the sync via AJAX
        const syncUrl = syncButton.getAttribute('href');
        const deviceId = <%= @smart_device.id %>;
        const deviceName = "<%= @smart_device.name %>";
        
        $.ajax({
          url: syncUrl,
          method: 'POST',
          dataType: 'json',
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
          },
          success: function(response) {
            console.log('Sync job started:', response);
            if (response.job_id) {
              // Use only the global SyncProgressManager for progress tracking
              if (typeof window.SyncProgressManager !== 'undefined') {
                console.log('Starting sync using SyncProgressManager');
                window.SyncProgressManager.startSync(deviceId, response.job_id, deviceName);
                
                // Re-enable the button after a few seconds
                setTimeout(function() {
                  enableSyncButton();
                }, 3000);
              } else {
                console.error('SyncProgressManager not available! Check if sync_progress_manager.js is properly loaded');
                enableSyncButton();
              }
            } else {
              console.log('Sync complete without job ID');
              enableSyncButton();
            }
          },
          error: function(xhr, status, error) {
            console.error('Error starting sync job:', error);
            enableSyncButton();
          }
        });
      });
    }
    
    // Function to re-enable the sync button
    function enableSyncButton() {
      if (syncButton) {
        syncButton.classList.remove('disabled');
        syncButton.removeAttribute('disabled');
      }
    }
  });
</script>
<% end %>